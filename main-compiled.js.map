{"version":3,"sources":["main.js"],"names":[],"mappings":"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","file":"main-compiled.js","sourcesContent":[";(function (window, document, d3, newssimData) {\n  'use strict';\n\n  /**\n   * Get the frequencies of a keyword in a data on daily basis\n   * @param {string}    word: keyword to search\n   * @param {object}  data: database of content, arary of objects with content field\n   * @return {object}   in form of {20130202: 3,\n   *                                20130804: 2,\n   *                                ...}\n   *                    days with no mentions are not included at all\n   */\n  function countWordByDay (word, data) {\n\n    let result = {}\n\n    for (let entry of data) {\n      if (entry.content.includes(word)) {\n        if (result[entry.publish_date]) {\n          result[entry.publish_date] += 1\n        } else {\n          result[entry.publish_date] = 1\n        }\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * Extract parts (year, month, or day) from a date string in the form of 20120823\n   * @param {string} dateString\n   * @returns {string[]}\n   */\n  function separateDateComponents(dateString) {\n    return [dateString.slice(0, 4),\n            dateString.slice(4, 6),\n            dateString.slice(6, 8)]\n  }\n\n  /**\n   * Aggregate word frequencies by week, month, or year\n   * @param {object[]} wordCounts\n   * @param {string} period\n   */\n  function aggregatePeriod (wordCounts, period = 'month') {\n\n    let result = {}\n\n    let key, getKey\n    if (period === 'year') {\n      getKey = (date) => date.slice(0, 4)\n    } else if (period === 'month') {\n      getKey = (date) => date.slice(0, 6)\n    } else if (period === 'day') {\n      getKey = (date) => date.slice(0, 8)\n    } else {\n      throw new Error('un-implemented period: ', period)\n    }\n\n    for (let date in wordCounts) if (wordCounts.hasOwnProperty(date)) {\n      key = getKey(date)\n\n      if (result[key]) {\n        result[key] += wordCounts[date]\n      } else {\n        result[key] = wordCounts[date]\n      }\n    }\n\n    return result\n  }\n\n  console.log(aggregatePeriod(countWordByDay('一胎', newssimData), 'year'))\n\n  // Hide loading notice\n  const loadingNotice = document.getElementsByClassName('loading-notice')[0]\n  loadingNotice.parentNode.removeChild(loadingNotice)\n\n  // Get DOM elements\n  const btnConfirm = document.getElementsByClassName('btnConfirm')[0]\n  const keywordInput = document.getElementsByClassName('keywordInput')[0]\n  const display = document.getElementById('display')\n\n  btnConfirm.addEventListener('click', (event) => {\n    let searchResult = aggregatePeriod(countWordByDay(keywordInput.value, newssimData), 'month')\n    let resultLine\n    let bar\n    display.innerHTML = ''\n\n    for (let date in searchResult) {\n      resultLine = document.createElement('p')\n      bar = document.createElement('div')\n      resultLine.textContent = date.toString() + '-' + searchResult[date]\n      bar.style.height = '10px'\n      bar.style.backgroundColor = 'black'\n      bar.style.width = searchResult[date] * 100 + 'px'\n      resultLine.appendChild(bar)\n      display.appendChild(resultLine)\n    }\n  })\n\n})(window, window.document, window.d3, window.newssim_db)"]}